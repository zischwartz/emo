~/code/emojify
08:09 PM zach@Zachs-MacBook-Air:
⚡️ docker ps
CONTAINER ID        IMAGE                             COMMAND                  CREATED             STATUS              PORTS                          NAMES
09aa1ac7dcc4        zischwartz/sparkdemo:withdata     "/bin/sh -c '/bin/bas"   28 hours ago        Up 28 hours         172.99.70.82:32784->8888/tcp   beaea38e-bcd4-482f-8dba-01e96bb90288-n1/tmp.zischwartzsparkdemo.cXbdlJm3R4LG
f985dab7704a        zischwartz/sparkdemo:withdata     "/bin/sh -c '/bin/bas"   28 hours ago        Up 28 hours         172.99.70.82:32783->8888/tcp   beaea38e-bcd4-482f-8dba-01e96bb90288-n1/tmp.zischwartzsparkdemo.gypheDVwMm4a
edf018809aa1        zischwartz/sparkdemo:withdata     "/bin/sh -c '/bin/bas"   28 hours ago        Up 28 hours         172.99.70.82:32782->8888/tcp   beaea38e-bcd4-482f-8dba-01e96bb90288-n1/tmp.zischwartzsparkdemo.0CUsImAHbND4
328be45c870c        zischwartz/sparkdemo:withdata     "/bin/sh -c '/bin/bas"   2 days ago          Up 2 days           172.99.70.82:32777->8888/tcp   beaea38e-bcd4-482f-8dba-01e96bb90288-n1/tmp.zischwartzsparkdemo.gpUkghgaunpl
e75ad9c493ac        zischwartz/sparkdemo:withdata     "/bin/sh -c '/bin/bas"   2 days ago          Up 2 days           172.99.70.82:32772->8888/tcp   beaea38e-bcd4-482f-8dba-01e96bb90288-n1/tmp.zischwartzsparkdemo.DFeua3ngefUe
8bf1b45f4d6e        zischwartz/sparkdemo:withdata     "/bin/sh -c '/bin/bas"   2 days ago          Up 2 days           172.99.70.82:32773->8888/tcp   beaea38e-bcd4-482f-8dba-01e96bb90288-n1/tmp.zischwartzsparkdemo.w2ds6AAiYjPG
dd5a83397d84        zischwartz/sparkdemo:withdata     "/bin/sh -c '/bin/bas"   2 days ago          Up 2 days           172.99.70.82:32771->8888/tcp   beaea38e-bcd4-482f-8dba-01e96bb90288-n1/tmp.zischwartzsparkdemo.9HWimvPmcFWL
6d6a0c7f7874        jupyter/tmpnb                     "python orchestrate.p"   2 days ago          Up 2 days                                          beaea38e-bcd4-482f-8dba-01e96bb90288-n1/tmpnb
150dd86ffa03        jupyter/configurable-http-proxy   "configurable-http-pr"   2 days ago          Up 2 days           172.99.70.82:32769->8000/tcp   beaea38e-bcd4-482f-8dba-01e96bb90288-n1/proxy

~/code/emojify
08:12 PM zach@Zachs-MacBook-Air:
⚡️ docker info
Containers: 12
Images: 7
Role: primary
Strategy: spread
Filters: health, port, dependency, affinity, constraint
Nodes: 1
 beaea38e-bcd4-482f-8dba-01e96bb90288-n1: 172.99.70.82:42376
  └ Containers: 12
  └ Reserved CPUs: 0 / 12
  └ Reserved Memory: 0 B / 4.2 GiB
  └ Labels: executiondriver=native-0.2, kernelversion=3.18.21-1-rackos, operatingsystem=Debian GNU/Linux 7 (wheezy) (containerized), storagedriver=aufs
CPUs: 12
Total Memory: 4.2 GiB
Name: 39cbe55d37a4




https://gist.github.com/runemadsen/3bcd411a64ba06619b44



// This piece of code generates the correct SHA1 based on the concatenated
// namespace and id strings.

namespace := "e75a36a9-3323-40dd-a7d1-1c57ad2aa3cd"
id := "event154"

h := sha1.New()
h.Reset()
h.Write([]byte(uuid.Parse(namespace)))
h.Write([]byte(id))
s := h.Sum(nil)

fmt.Printf("%x\n", s) # 4505612cc3239d6f75ccb7f362b9ba55dd0baee3


// This code generates the wrong SHA1 based on the same strings.
// HOWEVER, if I change line 9 of the go code to remove uuid.Parse
// the Go code generates the same Sha1 as this code. I know this is because
// uuid.Parse converts the uuid string to a 16-byte bytearray, but I cannot
// for the life of me figure out what that means in JS. This code will output the
// same bytearray as the Go uuid bytearray:
//var byteNamespace = UUID.fromURN(namespace).toBytes();

var UUID = require('uuid-js');
var crypto = require("crypto-js");

var namespace = "e75a36a9-3323-40dd-a7d1-1c57ad2aa3cd";
var id = "event154";

var s = crypto.SHA1(namespace + id);

console.log(s) // 131ed4e3df8e287f590c9edafad264bcecfde1b9